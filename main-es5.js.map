{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/header/header.component.ts","webpack:///src/app/components/header/header.component.html","webpack:///src/app/components/weather-card-details/weather-card-details.component.ts","webpack:///src/app/components/weather-card-details/weather-card-details.component.html","webpack:///src/app/components/weather-card/weather-card.component.ts","webpack:///src/app/components/weather-card/weather-card.component.html","webpack:///src/app/service/forecast.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","HeaderComponent","WeatherCardDetailsComponent","forecastService","notify","getDetailedForecasts","foreCast$","getForeCasts","pipe","weatherPointArray","filter","singlePoint","console","log","selectedDate","slice","dt_txt","WeatherCardComponent","getForecasts","foreCast","selectedForeCast","foreCasts$","endsWith","ForecastService","http","forecastUrl","get","objectFromServer","list","map","forcast","temp_min","main","temp_max","icon","weather","providedIn","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Saint-Malo';\n}\n","<div style=\"text-align:center\">\n  <app-weather-card></app-weather-card>\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule }    from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { WeatherCardComponent } from './components/weather-card/weather-card.component';\nimport { WeatherCardDetailsComponent } from './components/weather-card-details/weather-card-details.component';\nimport { HeaderComponent } from './components/header/header.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WeatherCardComponent,\n    WeatherCardDetailsComponent,\n    HeaderComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n  @Input() title: string\n  @Input() selectedTimeRange: 'day' | 'week'\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<img src=\"../assets/logo-bateau.png\" alt=\"logo bateau\">\n<h1>Bienvenue dans l'application de météo de la ville de Saint-Malo</h1>\n<h2 *ngIf=\"selectedTimeRange === 'week'\">Temps des 5 prochains jours</h2>\n<h2 *ngIf=\"selectedTimeRange === 'day'\">Temps de la journée</h2>\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { WeatherPoint } from 'src/forecast';\nimport { Observable } from 'rxjs';\nimport { ForecastService } from 'src/app/service/forecast.service';\nimport { map } from 'rxjs/internal/operators/map';\n\n@Component({\n  selector: 'app-weather-card-details',\n  templateUrl: './weather-card-details.component.html',\n  styleUrls: ['./weather-card-details.component.css']\n})\nexport class WeatherCardDetailsComponent implements OnInit {\n  foreCast$: Observable<WeatherPoint[]>\n  @Input() selectedDate: string\n  @Output() notify: EventEmitter<string> = new EventEmitter<string>()\n\n  constructor(private forecastService: ForecastService) { }\n\n  ngOnInit(): void {\n    this.getDetailedForecasts()\n  }\n\n  getDetailedForecasts(): void {\n    this.foreCast$ = this.forecastService.getForeCasts().pipe(\n      map(weatherPointArray => weatherPointArray.filter(singlePoint => {\n        console.log('selected', this.selectedDate.slice(0,10))\n        return singlePoint.dt_txt.slice(0,10) === this.selectedDate.slice(0,10)\n      }))\n    )\n  }\n\n}\n","<button \n    class=\"button transform\"\n    (click)=\"notify.emit()\">\n<strong>Retour</strong>\n</button>\n<div *ngIf=\"selectedDate\" class =\"cardDetail\">\n    \n    <ul \n    class=\"cardDetails-body transform\"\n    *ngFor=\"let foreCast of (foreCast$ | async)\" >\n        <li><strong>{{ foreCast.dt_txt | date:'EEEE dd LLLL':'+0200':'fr'}}</strong></li>\n        <li>à {{ foreCast.dt_txt | date:'HH'}}h</li>\n        <img\n        src=\"/assets/{{foreCast.icon}}.png\"\n        alt=\"icon meteo\"\n        />\n        <li>{{ foreCast.temp_min | number:'1.0-0'}} °</li>\n    </ul>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { WeatherPoint, PointFromServer } from 'src/forecast';\nimport { ForecastService } from 'src/app/service/forecast.service';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/internal/operators/map';\nimport { registerLocaleData } from '@angular/common';\nimport localeFr from '@angular/common/locales/fr';\nregisterLocaleData(localeFr, 'fr');\n\n\n@Component({\n  selector: 'app-weather-card',\n  templateUrl: './weather-card.component.html',\n  styleUrls: ['./weather-card.component.css']\n})\nexport class WeatherCardComponent implements OnInit {\n  foreCasts$: Observable<WeatherPoint[]>\n  selectedForeCast: WeatherPoint\n\n  constructor(private forecastService: ForecastService) { }\n\n  ngOnInit(): void {\n    this.getForecasts();\n  }\n\n  onSelect(foreCast: WeatherPoint): void {\n    this.selectedForeCast = foreCast\n  };\n\n  onNotify() {\n    this.selectedForeCast = null\n  }\n  \n  getForecasts(): void {\n    this.foreCasts$ = this.forecastService.getForeCasts().pipe(\n      map(weatherPointArray => weatherPointArray.filter(singlePoint => singlePoint.dt_txt.endsWith('12:00:00')))\n    )\n  }\n}\n","<app-header [selectedTimeRange]=\"selectedForeCast ? 'day' : 'week'\"></app-header>\n<div \nclass=\"card\"\n*ngIf=\"!selectedForeCast\" >\n    <ul  \n    class=\"card-body transform\" \n    *ngFor=\"let foreCast of (foreCasts$ | async)\" \n    (click)=\"onSelect(foreCast)\" \n    [class.selected]=\"foreCast=== selectedForeCast\">\n        <li><strong>{{ foreCast.dt_txt | date:'EEEE dd LLLL':'+0200':'fr'}}</strong></li>\n        <li>à {{ foreCast.dt_txt | date:'hh'}}h</li>\n        <li>\n            <img\n            src=\"../../../assets/{{foreCast.icon}}.png\"\n            alt=\"icon meteo\"\n            />\n        </li>\n        <li>{{ foreCast.temp_min | number:'1.0-0'}} °</li>\n    </ul>\n</div>\n\n<app-weather-card-details \n    *ngIf=\"selectedForeCast\" \n    [selectedDate]=\"selectedForeCast.dt_txt\"\n    (notify)=\"onNotify()\">\n    \n</app-weather-card-details>\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { map, take, tap } from 'rxjs/operators';\n\nimport { WeatherPoint, ServerData } from 'src/forecast';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ForecastService {\n  private forecastUrl = 'https://api.openweathermap.org/data/2.5/forecast?q=saint-malo&units=metric&appid=1df8aa478c8facf4df1c047ad220d70a';\n  \n  constructor(private http: HttpClient) { }\n  \n  getForeCasts(): Observable<WeatherPoint[]> {\n    return this.http.get<ServerData>(this.forecastUrl)\n      .pipe(\n        map(objectFromServer => objectFromServer.list.map(forcast => ({\n          temp_min: forcast.main.temp_min,\n          temp_max: forcast.main.temp_max,\n          icon: forcast.weather[0].icon,\n          dt_txt: forcast.dt_txt\n        })))\n      )\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}